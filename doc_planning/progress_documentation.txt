11.7. started work on 3d level editor software
12.7. started to implemente spawning, dragging and visual selection of cuboids
17.7. finished implementing selection box

24.7. implementing dragging

2.10. returned to this project
3.10. renamed this project to tartarus modelling tool and uploaded this project and the flowcharting tool to github along with setting up git vcs
14.10. finished writing out requirements
18.10. selection system and selection boxes are working
21.10. selection system cleaned up
23.10. got crude rotation snapping done, brought in 3d vector arrows for easier debugging
25.10. fixed snap_rotation inconsistencies depending on surface normal
28.10. created unit_test.gd, removed drag_state, added rotation using r and t
6.11. moved dragging logic into update_snap(), added aabb calculation for determining size of selection
18.11. drag_offset became offset from raycast hit to dragged part, main_offset became offset from dragged part to rest of selection
20.11. refactored and cleaned up snap_position()
27.11. further improved snapping (odd/even offset) and moved lots of static functions into snap_utils.gd
5.12. updated readme
20.12. added shader to render handles on top, started work on transform_handle.gd, added collision layers to raycast functions
27.12. continued to roughly work out how to make transform handles work
8.1. figuring out projection of mouse movement onto transform handle axis
20.1. squashed bug when user tries to drag already selected part by holding shift, reorganized some code
22.1. replaced aabb with my own abb class to avoid having to rotate my data to fit the aabb and temporarily added a mesh representation
23.1. worked on studying better architecture for input() in the main class
24.1. removed state enum and changed out with array which contains each transformhandle, renamed some functions to make more sense, changed transformhandle code to work at any orientation, reorganized some functions into transformhandleutils
29.1. added a bunch of functionality to set the position and rotation of the transform tools, optimized functions in snap_utils to iterate through basis instead of redundant arrays
30.1. optimized and fixed calculation of mouse in 3d space for transform handles, got too exhausted to add snapping, added snapping options ui, added signals and functionality for said ui

3.2. added snapping to transform handles, added torus collider generator, started work on rotation tool, added partially automated setup to transform handles (tool script)
4.2. implemented rotation tool
5.2. solved problem of transform handles getting too small from too far away (subviewport with second camera), albeit with some tech debt, deleted render_over shader as it is no longer needed
6.2. rewrote math for linear movement of transform handles
7.2. merged and deleted transform_handles branch, started to refine architecture of codebase
10.2. fixed ALL transform handle bugs, added hovered color, deleted offset_dragged_to_selected_array and replaced it with offset_abb_to_selected_array, thereby making the abb the central reference point for transformations and selections, used abb in snap_position for "normal bump", added double and half button for positional snapping, properly managed state of freelookcamera, added snapping_active to snap_position()
11.2. properly implemented scaling tool for single part selections
13.2. started working on shaders for material which can be colored per instance and is always visible even at full black and full white
14.2. fixed wrongly handled edge case in snap_rotation() when dragged part is aligned to hovered part with normal vector but not others, fixed bug in apply_snap_rotation() where selected_parts_abb.basis was being set wrong in some cases (and was getting out of sync from the selection), fixed bug in snap_position() where "normal bump" was still using side length of dragged part, added centralized tool enum in main and got rid of string identifiers in transform handles
17.2. implemented HyperDebug to the best of my ability, tried to make an easy interface to use; define an action in HyperDebug.config(), then call .do() on the action, passing all required data for visualization or the string to print, hastily moved scaling math into snap_utils.transform()
26.2. back from long break, brainstormed about ui and ux, made negative axis positioning handles dashed to indicate theyre the negative direction, made new "dropdown" control class
27.2. finished dropdown button class, started work on automatic color sorting algorithm
28.2. finished color sorting algorithm
3.3. created icons for: drag, move, rotate, scale, add part, delete part, color tool, material tool, lock part, unlock part, all in blender.
5.3. reworked material tool icon, made moodboard for ui styling, created basic layout for new ui
6.3. cleaned up test ui, reworked folder structure, continued work on ui, made themes for ui
7.3. cleaned up and removed all themes in favor of going back to theme overrides, added sci fi font, finalized bottom panel, added functionality for having no tools selected
17.3. back from other work, styled tooltips, started work on document displaying ui
20.3. finished document displaying ui; added page change buttons, added search function
21.3. added incomplete search result marking function
24.3. finished search result marking function
